{"version":3,"file":"main.70040be4108d3b108ddb.bundle.js","sources":["webpack:///./src/components/Grid/Col.tsx"],"sourcesContent":["import styled, { css } from \"../../styled\";\n\ninterface ColSetting {\n  span?: number;\n  order?: number;\n  offset?: number;\n  push?: number;\n  pull?: number;\n  hidden?: boolean;\n}\n\ninterface ColProps extends ColSetting {\n  xs?: number | ColSetting;\n  sm?: number | ColSetting;\n  md?: number | ColSetting;\n  lg?: number | ColSetting;\n  xl?: number | ColSetting;\n  xxl?: number | ColSetting;\n  smBreak?: number;\n  mdBreak?: number;\n  lgBreak?: number;\n  xlBreak?: number;\n  xxlBreak?: number;\n}\nconst colPercent = (col: number = 0) =>\n  col > 0 ? `${(col * 100) / 24}%;` : \"0%\";\n\ninterface ColSetting {\n  span?: number;\n  order?: number;\n  offset?: number;\n  push?: number;\n  pull?: number;\n  hidden?: boolean;\n}\nconst createMediaCss = (\n  defaultBreak: number,\n  resProp: number | ColSetting,\n  resBreak?: number\n) => css`\n  @media (min-width: ${resBreak ? resBreak : defaultBreak}px) {\n    ${getColProps(resProp)}\n  }\n`;\nconst getColProps = (setting: ColSetting | number) => `\n  ${typeof setting === \"number\"\n    ? `${setting ? `width: ${colPercent(setting)}` : \"\"}`\n    : `\n    ${parseColToStyle(setting)}\n`}\n`;\nconst parseColToStyle = (setting: ColSetting) => `\n  ${setting.hidden ? \"display:none;\" : \"\"}\n  ${setting.span ? \"width:\" + colPercent(setting.span) : \"\"}\n  ${setting.order ? \"order:\" + setting.order : \"\"}\n  ${setting.offset ? \"margin-left:\" + colPercent(setting.offset) : \"\"}\n  ${setting.push ? \"left:\" + colPercent(setting.push) : \"\"}\n  ${setting.pull ? \"right:\" + colPercent(setting.pull) : \"\"}\n`;\nconst StyledCol = styled.div<ColProps>`\n  float: left;\n  position: relative;\n  display: block;\n  position: relative;\n  min-height: 1px;\n  padding-left: 0;\n  padding-right: 0;\n  flex: 1 1 auto;\n  ${props => getColProps(props)}\n  ${props => getColProps(props)}\n  ${props => (props.xs ? getColProps(props.xs) : \"\")}\n  ${props => (props.sm ? createMediaCss(576, props.sm, props.smBreak) : \"\")}\n  ${props => (props.md ? createMediaCss(768, props.md, props.lgBreak) : \"\")}\n  ${props => (props.lg ? createMediaCss(992, props.lg, props.lgBreak) : \"\")}\n  ${props => (props.xl ? createMediaCss(1200, props.xl, props.xlBreak) : \"\")}\n  ${props => (props.xxl ? createMediaCss(1200, props.xxl, props.xxlBreak) : \"\")}\n`;\n\nexport const Col = StyledCol;\n"],"mappings":"AAwBA","sourceRoot":""}